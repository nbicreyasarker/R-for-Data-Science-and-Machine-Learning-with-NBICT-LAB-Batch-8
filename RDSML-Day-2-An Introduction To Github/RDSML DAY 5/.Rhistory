q()
q()
q()
q()
q()
q()
q()
print(name)
name ="Reya Sarker"
print(name)
class(name)
print(c+9)
print(a=9)
print(a + 9)
print(a+9)
print(a+9)
print(a+9)
print(a=11+9)
print(a+9)
print(a + 9)
class(c)
class(c)
print(a+9)
print(a+9)
print(a+9)
# Data Types in R
# 1.Numeric -Integer / Floating point
# 2.String -"Reya Sarker"/ 'Reya Sarker'
# 3.Logical
a = 11
b = 7.19
class(a)
class(b)
name ="Reya Sarker"
print(name)
class(name)
c = "52"
print(c+9)
print(a+9)
class(c)
#Logical Data Type - TRUE , FALSE (T , F)
a > b
#Logical Data Type - TRUE , FALSE (T , F)
class(a > b)
#Logical Data Type - TRUE , FALSE (T , F)
class(a < b)
#Logical Data Type - TRUE , FALSE (T , F)
print(a < b)
print(x==y)
x = 19
y = 22-3
print(x==y)
print(x !=y)
print(y>=x)
# logical Operators In R
4 == 4 && 5 == 5
TRUE & TRUE
T & T
F & T
FALSE & FALSE
x
y
x !=y || x==y
TRUE || TRUE
TRUE || FALSE
FALSE || TRUE
FALSE || FALSE
# Simple Mathematical Operations In R
z= 6+9*2/3
# Simple Mathematical Operations In R
z= 6+9*2/3
# Simple Mathematical Operations In R
z=6+9-8*2/3
print(z)
z=6+9-8*(2/3)
w=4+3-3*2/3
print(w)
w=(4+3-3)*2/3
print(w)
print(y)
y = 4^2
print(y)
y = 4^3
y = 4^3
print(y)
y=4^2
print(y)
y=4^3
print(y)
11/5
11%%5
11%/%5
load("C:/Users/USER/Documents/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-2-An Introduction To Github/RDSML BASIC 2 Day 4/.RData")
setwd("~/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-2-An Introduction To Github/RDSML DAY 5")
setwd("~/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-2-An Introduction To Github/RDSML DAY 5")
setwd("~/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-2-An Introduction To Github/RDSML DAY 5")
setwd("~/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-2-An Introduction To Github/RDSML DAY 5")
#Creating a vector usuing c()command
student_height=c(60,69,55,62)
#vectors in R
#Creating a vector usuing c()command
student_height=c(60,69,55,62)
student.height
#checking the class of vector student.height
is.numeric(student_height)
is.logical(student_height)
#R automatically converts numeric to text, when u have a text item in the vector
b=c(5,8,2,"sv")
b=c(5,8,2,"sv")
is. numeric(b)
is.numeric(b)
is.character(b)
#we can convert data types
#for example from numeric to character
a<-c(1,2,3,4,5)
class(a)
is.numeric(a)
as.character(a)
class(a)
a=c(1,2,3,4,5)
a=c(1,2,3,4,5)
class(a)
class(a)
a=c(1,2,3,4,5)
a
class(a)
class(a)
is.numeric(a)
a=as.character(a)
class(a)
#logical operators true and false when converted
#to numeric, true converts to 1
#and false converts to zero
d=c(true,false,true,false)
#logical operators true and false when converted
#to numeric, true converts to 1
#and false converts to zero
d=c(true,false,false,true,false)
#logical operators true and false when converted
#to numeric, true converts to 1
#and false converts to zero
#logical operators true and false when converted
#to numeric, true converts to 1
#and false converts to zero
d=c(True,False,False,True,False)
#logical operators TRUE and FALSE when converted
#to numeric, TRUE converts to 1
#and FALSE converts to zero
d=c(TRUE,FALSE,FALSE,TRUE,FALSE)
as.numeric(d)
d=as.numeric(d)
or any number other than zero converts to TRUE
#numeric to logical(1 or any number other than 0 converts to TRUE ,
#0 converts to FALSE)
class(d)
d=as.logical(d)
d
e=c(1,0,0,1,23,-7,0)
e=as.logical(e)
e
#creating sequential vector from 1 to 10
my_seq=c(1:10)
my_seq
my_seq=c(1:100)
my_seq
my_seq=c(1:50,80,99,88,60,77)
my_seq=c(1:50,80,99,88,60,77)
my_seq
#creating a seqential vector usuing the seq() function
new_seq=c(seq(1,10))
new_seq
#sequence in steps of 3
new_seq=c(seq(1,10,by=3))
new_seq
#vectors can have character
name=c("Elias","Mahfuza","Chaitali","Ashraf")
class(name)
name[3]
name[3:4]
#assigning names to vector values
#assigning names to vector values
my_values=c(4,79,11)
names(my_values)=c("a","b","c","d")
my_values=c(4,7,9,11)
names(my_values)=c("a","b","c","d")
my_values
my_values(c)
my_values[c]
my_values["c"]
